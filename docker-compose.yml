version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tumapay_backend
    restart: always
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: development
      PORT: 3000
      API_PREFIX: api/v1
      APP_URL: http://localhost:3000
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: tumapay_user
      DB_PASSWORD: tumapay_pass_2024
      DB_DATABASE: tumapay_db
      DB_SYNCHRONIZE: true
      DB_LOGGING: false
      # Auth
      BETTER_AUTH_SECRET: tumapay-prod-secret-key-2024-change-in-production-minimum-32-chars
      BETTER_AUTH_URL: http://localhost:3000
      BETTER_AUTH_TRUST_HOST: true
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: tumapay_redis_2024
      REDIS_TTL: 3600
      # CORS
      CORS_ORIGIN: http://localhost:3001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - tumapay_network
    volumes:
      - ./backend/src:/app/src  # For development hot-reload (remove in production)
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/v1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    container_name: tumapay_postgres
    restart: always
    environment:
      POSTGRES_DB: tumapay_db
      POSTGRES_USER: tumapay_user
      POSTGRES_PASSWORD: tumapay_pass_2024
      PGDATA: /var/lib/postgresql/data
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - tumapay_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tumapay_user -d tumapay_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: tumapay_redis
    restart: always
    command: redis-server --requirepass tumapay_redis_2024
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - tumapay_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: PgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: tumapay_pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@tumapay.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - '5050:80'
    networks:
      - tumapay_network
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  tumapay_network:
    driver: bridge
